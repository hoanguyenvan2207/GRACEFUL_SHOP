# .github/workflows/deploy.yml
name: CI/CD Build & Deploy to VM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Build Backend
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
      - name: Build Spring Boot JAR
        run: |
          cd backend/DATN_BE
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      # 3. Build Frontend
      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Build Vue Frontend
        run: |
          cd frontend/datnfe
          npm ci
          npm run build

      # 4. Debug workspace (báº­t lÃªn náº¿u váº«n cáº§n)
      # - name: Debug workspace for scp
      #   run: |
      #     echo "ROOT:"
      #     ls -1 .
      #     echo "TARGET JAR:"
      #     ls -1 backend/DATN_BE/target
      #     echo "DIST FILES:"
      #     ls -1 frontend/datnfe/dist

      # 5. Copy artifacts to VM
      - name: Copy artifacts to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          port: ${{ secrets.VM_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            backend/DATN_BE/target/*.jar
            frontend/datnfe/dist   # <-- chá»‰ cáº§n thÆ° má»¥c, scp-action sáº½ Ä‘á»‡ quy
          target: /home/${{ secrets.VM_USER }}/deploy/

      # 6. SSH into VM & deploy
      - name: SSH & Deploy on VM
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          port: ${{ secrets.VM_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            echo "=== DEPLOY BACKEND ==="
            sudo mv /home/${{ secrets.VM_USER }}/deploy/target/*.jar /home/${{ secrets.VM_USER }}/app.jar
            sudo systemctl restart graceful-backend

            echo "=== DEPLOY FRONTEND ==="
            sudo rm -rf /var/www/html/*
            sudo cp -r /home/${{ secrets.VM_USER }}/deploy/dist/* /var/www/html/
            sudo systemctl reload nginx

            echo "ðŸŽ‰ Deployment complete!"
